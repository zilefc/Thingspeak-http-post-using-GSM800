/*
 * By Frederico Zile
 * fczile@gmail.com
 * 1h-----3600s
 * 72h-----x
 * x=
 * 
 * 
 * 
 * */
#include <SoftwareSerial.h>
#include <String.h>
#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <DHT.h>  
#define DHTPIN A0

SoftwareSerial gprsSerial(10,11);
DHT dht(DHTPIN, DHT11);
Adafruit_SSD1306 display(-1);
String numero = "+258848361421";

const unsigned char isutc [] PROGMEM = {
 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xf0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0x80, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xfc, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xf0, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xc0, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xfc, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xf0, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xe0, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x07, 0xc0, 0x3f, 0xff, 0xff, 
  0xff, 0xff, 0x80, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x0f, 0x00, 0x1f, 0xff, 0xff, 
  0xff, 0xff, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x0e, 0x00, 0x1f, 0xff, 0xff, 
  0xff, 0xfe, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x0e, 0x00, 0x0f, 0xff, 0xff, 
  0xff, 0xfc, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc3, 0xfc, 0x0e, 0x0f, 0xff, 0xff, 
  0xff, 0xf0, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc3, 0xfc, 0x1f, 0x07, 0xff, 0xff, 
  0xff, 0xe0, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc3, 0xf8, 0x3f, 0x87, 0xff, 0xff, 
  0xff, 0xc0, 0x1f, 0xff, 0xff, 0xfc, 0xf0, 0x7c, 0x7c, 0x7f, 0xc3, 0xf8, 0x7f, 0x87, 0xff, 0xff, 
  0xff, 0xc0, 0x3f, 0xff, 0xff, 0xf8, 0xe0, 0x3c, 0x7c, 0x7f, 0xc3, 0xf8, 0x7f, 0xff, 0xff, 0xff, 
  0xff, 0x80, 0x7f, 0xff, 0xff, 0xf8, 0xc0, 0x1c, 0x7c, 0x7f, 0x83, 0xf0, 0x7f, 0xff, 0xff, 0xff, 
  0xff, 0x00, 0xff, 0xff, 0xff, 0xf8, 0xc7, 0x1c, 0x7c, 0xff, 0x87, 0xf0, 0xff, 0xff, 0xff, 0xff, 
  0xfe, 0x01, 0xff, 0xff, 0xff, 0xf8, 0xc7, 0x9c, 0x78, 0xff, 0x87, 0xf0, 0xff, 0xff, 0xff, 0xff, 
  0xfe, 0x01, 0xff, 0xff, 0xff, 0xf8, 0xc7, 0x8c, 0x78, 0xff, 0x87, 0xf0, 0xff, 0xff, 0xff, 0xff, 
  0xfc, 0x03, 0xff, 0xff, 0xff, 0xf9, 0xc3, 0xf8, 0xf8, 0xff, 0x87, 0xf0, 0xff, 0xff, 0xff, 0xff, 
  0xf8, 0x03, 0xff, 0xff, 0xff, 0xf1, 0xc1, 0xf8, 0xf8, 0xff, 0x87, 0xf0, 0xff, 0xff, 0xff, 0xff, 
  0xf8, 0x07, 0xff, 0xff, 0xff, 0xf1, 0xe0, 0x78, 0xf8, 0xff, 0x87, 0xf0, 0xff, 0x0f, 0xff, 0xff, 
  0xf0, 0x07, 0xff, 0xff, 0xff, 0xf1, 0xf0, 0x38, 0xf9, 0xff, 0x07, 0xf0, 0xff, 0x0f, 0xff, 0xff, 
  0xf0, 0x07, 0xff, 0xff, 0xff, 0xf1, 0xfc, 0x38, 0xf1, 0xff, 0x0f, 0xf0, 0xfe, 0x1f, 0xff, 0xff, 
  0xf0, 0x0f, 0xff, 0xff, 0xff, 0xf1, 0xfe, 0x18, 0xf1, 0xff, 0x0f, 0xf0, 0x7e, 0x1f, 0xff, 0xff, 
  0xe0, 0x0f, 0xff, 0xff, 0xff, 0xf3, 0x1f, 0x18, 0xf1, 0xff, 0x0f, 0xf8, 0x38, 0x1f, 0xff, 0xff, 
  0xe0, 0x0f, 0xff, 0xff, 0xff, 0xe3, 0x1f, 0x18, 0xf1, 0xff, 0x0f, 0xf8, 0x00, 0x3f, 0xff, 0xff, 
  0xe0, 0x0f, 0xff, 0xff, 0xff, 0xe3, 0x8e, 0x38, 0xe3, 0xff, 0x0f, 0xf8, 0x00, 0x7f, 0xff, 0xff, 
  0xe0, 0x0f, 0xff, 0xff, 0xff, 0xe3, 0x80, 0x38, 0x03, 0xfe, 0x0f, 0xfc, 0x00, 0x7f, 0xff, 0xff, 
  0xe0, 0x07, 0xff, 0xff, 0xff, 0xe3, 0xc0, 0x7c, 0x07, 0xfe, 0x1f, 0xfe, 0x01, 0xff, 0xff, 0xff, 
  0xc0, 0x07, 0xff, 0xff, 0xff, 0xe3, 0xe0, 0xfe, 0x0f, 0xff, 0x5f, 0xff, 0x87, 0xff, 0xff, 0xff, 
  0xe0, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 
  0xe0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x1f, 
  0xe0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x7f, 
  0xe0, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc1, 0xff, 
  0xe0, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x07, 0xff, 
  0xe0, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x1f, 0xff, 
  0xf0, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0xff, 0xff, 
  0xf0, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x03, 0xff, 0xff, 
  0xf8, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x0f, 0xff, 0xff, 
  0xf8, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x7f, 0xff, 0xff, 
  0xfc, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x03, 0xff, 0xff, 0xff, 
  0xfe, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 
  0xff, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 
  0xff, 0x80, 0x00, 0x00, 0x07, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

void setup() {
  display.begin(SSD1306_SWITCHCAPVCC, 0x3C);
  display.clearDisplay();
  display.drawBitmap(0, 0,  isutc, 128, 64, WHITE);
  display.display();
  gprsSerial.begin(9600);     
  Serial.begin(9600); 
  dht.begin();
  delay(1000);
  display.clearDisplay();
  display.drawBitmap(0, 0,  isutc, 128, 64, WHITE);
  display.display();

}

void loop() {
 float t = dht.readTemperature(); 
 delay(100);   
   
 Serial.print("Temperature = ");
 Serial.print(t);
 Serial.println(" °C");
 
 display.clearDisplay(); 
 display.setTextSize(1);
 display.setTextColor(WHITE);
 display.setCursor(0,28);
 display.println("Leitura do Sensor:");
 display.setTextSize(2);
 display.println(t);
 display.display();
 delay(2000);

 mensagem();
  t = dht.readTemperature(); 
 delay(100);   
   
 Serial.print("Temperature = ");
 Serial.print(t);
 Serial.println(" °C");
 
 display.clearDisplay(); 
 display.setTextSize(1);
 display.setTextColor(WHITE);
 display.setCursor(0,28);
 display.println("Leitura do Sensor:");
 display.setTextSize(2);
 display.println(t);
 display.display();
 delay(2000);
 post();
 delay(259200000);
}
 void post()
 {
  float h = dht.readHumidity();
   float t = dht.readTemperature(); 
  if (gprsSerial.available())
    Serial.write(gprsSerial.read());
 
  gprsSerial.println("AT");
  delay(1000);
 
  gprsSerial.println("AT+CPIN?");
  delay(1000);
 
  gprsSerial.println("AT+CREG?");
  delay(1000);
 
  gprsSerial.println("AT+CGATT?");
  delay(1000);
 
  gprsSerial.println("AT+CIPSHUT");
  delay(1000);
 
  gprsSerial.println("AT+CIPSTATUS");
  delay(2000);
 
  gprsSerial.println("AT+CIPMUX=0");
  delay(2000);
 
  ShowSerialData();
 
  gprsSerial.println("AT+CSTT=\"internet\"");
  delay(1000);
 
  ShowSerialData();
 
  gprsSerial.println("AT+CIICR");
  delay(3000);
 
  ShowSerialData();
 
  gprsSerial.println("AT+CIFSR");
  delay(2000);
 
  ShowSerialData();
 
  gprsSerial.println("AT+CIPSPRT=0");
  delay(3000);
 
  ShowSerialData();
  
  gprsSerial.println("AT+CIPSTART=\"TCP\",\"api.thingspeak.com\",\"80\"");
  delay(6000);
 
  ShowSerialData();
 
  gprsSerial.println("AT+CIPSEND");
  delay(4000);
  ShowSerialData();
  
  String str="GET https://api.thingspeak.com/update?api_key=CE9B663AQCRG2BGH&field1=0" + String(t) +"&field2="+String(h);
  Serial.println(str);
  gprsSerial.println(str);
  
  delay(4000);
  ShowSerialData();
 
  gprsSerial.println((char)26);
  delay(5000); 
  gprsSerial.println();
 
  ShowSerialData();
 
  gprsSerial.println("AT+CIPSHUT");
  delay(100);
  ShowSerialData();
} 
void ShowSerialData()
{
  while(gprsSerial.available()!=0)
  Serial.write(gprsSerial.read());
  delay(5000); 
  
}
void mensagem()
{
   float t = dht.readTemperature(); 
 delay(100);   
   
 Serial.print("Temperature = ");
 Serial.print(t);
 Serial.println(" °C");
 
 display.clearDisplay(); 
 display.setTextSize(1);
 display.setTextColor(WHITE);
 display.setCursor(0,28);
 display.println("Leitura do Sensor:");
 display.setTextSize(2);
 display.println(t);
 display.display();
 delay(2000);
  gprsSerial.println("AT+CMGF=1");
  delay(1000);
  gprsSerial.println("AT+CMGS=\"" + numero + "\"\r");
  delay(1000);
  gprsSerial.println("A leitura do sensor eh de: ");
  gprsSerial.print(t);
  delay(100);
  gprsSerial.println((char)26);
  delay(1000);
}
